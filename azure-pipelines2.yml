# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main
- stage

variables:
  - name: stageName
    ${{ if eq(variables['Build.SourceBranchName'], 'main') }}: # only works if you have a main branch
      value: production
    ${{ if eq(variables['Build.SourceBranchName'], 'stage') }}: # only works if you have a main branch
      value: stage
  - name: deployToken
    ${{ if eq(variables['Build.SourceBranchName'], 'main') }}: # only works if you have a main branch
      value: $(deployment_token_prod)
    ${{ if eq(variables['Build.SourceBranchName'], 'stage') }}: # only works if you have a main branch
      value: $(deployment_token_stage)

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build  
    jobs:
      - job: Build
        displayName: 'Build job'
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '20.x'
          displayName: 'Install Node.js'
        - script: |
            echo $(stageName)
            npm install -g @angular/cli
            npm install
            ng build -c $(stageName) --output-path $(Build.ArtifactStagingDirectory)/$(stageName)
          displayName: 'npm install and build'  

        - publish: '$(Build.ArtifactStagingDirectory)/${{ variables.stageName }}'
          displayName: 'Publish script'
          artifact: 'drop_${{ variables.stageName}}'
  - stage: Deploy
    dependsOn: Build
    condition: succeeded('Build')
    jobs:
      - job: Deploy
        displayName: 'Deploy job'
        steps: 
        - download: current
          artifact: 'drop_${{ variables.stageName}}'
        - script: |
              echo $(stageName)
              ls -l
              cd /home/vsts/work/1/drop_$(stageName)
              ls -l
        - task: AzureStaticWebApp@0
          inputs:
            skip_app_build: true 
            skip_api_build: true
            workingDirectory: '/home/vsts/work/1/drop_${{ variables.stageName }} '
            app_location: browser
            #deployment_environment: ${{ variables.stageName }}
            azure_static_web_apps_api_token: ${{ variables.deployToken }}         
